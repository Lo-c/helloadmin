// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/google/wire"
	"github.com/spf13/viper"
	"helloadmin/internal/acme"
	"helloadmin/internal/department"
	"helloadmin/internal/login_record"
	"helloadmin/internal/menu"
	"helloadmin/internal/repository"
	"helloadmin/internal/role"
	"helloadmin/internal/server"
	"helloadmin/internal/user"
	"helloadmin/pkg/app"
	"helloadmin/pkg/helper/sid"
	"helloadmin/pkg/jwt"
	"helloadmin/pkg/log"
	"helloadmin/pkg/server/http"
)

// Injectors from wire.go:

func NewWire(viperViper *viper.Viper, logger *log.Logger) (*app.App, func(), error) {
	jwtJWT := jwt.NewJwt(viperViper)
	sidSid := sid.NewSid()
	db := repository.NewDB(viperViper, logger)
	client := repository.NewRedis(viperViper)
	repositoryRepository := repository.NewRepository(db, client, logger)
	userRepository := user.NewRepository(repositoryRepository)
	service := user.NewService(sidSid, jwtJWT, userRepository)
	login_recordRepository := login_record.NewRepository(repositoryRepository)
	login_recordService := login_record.NewService(login_recordRepository)
	departmentRepository := department.NewRepository(repositoryRepository)
	departmentService := department.NewService(departmentRepository)
	roleRepository := role.NewRepository(repositoryRepository)
	roleService := role.NewService(roleRepository)
	handler := user.NewHandler(logger, service, login_recordService, departmentService, roleService)
	roleHandler := role.NewHandler(logger, roleService)
	menuRepository := menu.NewRepository(repositoryRepository)
	menuService := menu.NewService(menuRepository)
	menuHandler := menu.NewHandler(logger, menuService)
	departmentHandler := department.NewHandler(logger, departmentService)
	login_recordHandler := login_record.NewHandler(logger, login_recordService)
	httpServer := server.NewHTTPServer(logger, viperViper, jwtJWT, handler, roleHandler, menuHandler, departmentHandler, login_recordHandler)
	job := server.NewJob(logger)
	appApp := newApp(httpServer, job)
	return appApp, func() {
	}, nil
}

// wire.go:

var repositorySet = wire.NewSet(repository.NewDB, repository.NewRedis, repository.NewRepository, repository.NewTransaction, role.NewRepository, menu.NewRepository, department.NewRepository, login_record.NewRepository, user.NewRepository, acme.NewRepository)

var serviceSet = wire.NewSet(role.NewService, menu.NewService, department.NewService, login_record.NewService, user.NewService, acme.NewService)

var handlerSet = wire.NewSet(role.NewHandler, menu.NewHandler, department.NewHandler, login_record.NewHandler, user.NewHandler, acme.NewHandler)

var serverSet = wire.NewSet(server.NewHTTPServer, server.NewJob, server.NewTask)

// build App
func newApp(httpServer *http.Server, job *server.Job) *app.App {
	return app.NewApp(app.WithServer(httpServer, job), app.WithName("hello-admin-server"))
}
